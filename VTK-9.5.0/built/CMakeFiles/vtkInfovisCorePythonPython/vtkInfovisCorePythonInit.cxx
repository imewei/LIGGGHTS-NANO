// Generated by vtkWrapPythonInit (see Wrapping/Tools/vtkWrapPythonInit.c)

#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>

// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

// Export the module initialization function
extern "C" { VTK_ABI_EXPORT PyObject *PyInit_vtkInfovisCore(); }

// Each PyVTKAddFile_<name>() is implemented in <name>Python.cxx,
// where <name>Python.cxx is generated by running the vtkWrapPython
// executable on the <name>.h header file.
extern "C" { void PyVTKAddFile_vtkAddMembershipArray(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAdjacencyMatrixToEdgeTable(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkArrayNorm(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkArrayToTable(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCollapseGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCollapseVerticesByArray(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkContinuousScatterplot(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkDotProductSimilarity(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkEdgeCenters(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExpandSelectedGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExtractSelectedGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExtractSelectedTree(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGenerateIndexArray(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGraphHierarchicalBundleEdges(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGroupLeafVertices(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkKCoreDecomposition(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMergeColumns(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMergeGraphs(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMergeTables(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMutableGraphHelper(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkNetworkHierarchy(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPipelineGraphSource(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPruneTreeFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRandomGraphSource(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkReduceTable(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRemoveHiddenData(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRemoveIsolatedVertices(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSparseArrayToTable(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkStreamGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkStringToCategory(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkStringToNumeric(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTableToArray(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTableToGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTableToSparseArray(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTableToTreeFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkThresholdGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkThresholdTable(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransferAttributes(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransposeMatrix(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeDifferenceFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeFieldAggregator(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeLevelsFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkVertexDegree(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkWordCloud(PyObject *dict); }

static PyMethodDef PyvtkInfovisCore_Methods[] = {
  { nullptr, nullptr, 0, nullptr }
};

static PyModuleDef PyvtkInfovisCore_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkInfovisCore", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkInfovisCore_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};

PyObject *PyInit_vtkInfovisCore()
{
  PyObject *m = PyModule_Create(&PyvtkInfovisCore_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkInfovisCore");
  }

  const char *depends[8] = {
    "vtkmodules.vtkCommonCore",
    "vtkmodules.vtkCommonDataModel",
    "vtkmodules.vtkCommonExecutionModel",
    "vtkmodules.vtkCommonColor",
    "vtkmodules.vtkIOImage",
    "vtkmodules.vtkImagingCore",
    "vtkmodules.vtkImagingSources",
    "vtkmodules.vtkRenderingFreeType",
  };

  for (int i = 0; i < 8; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
      Py_DECREF(m);
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkInfovisCore: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
    Py_DECREF(m);
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkInfovisCore, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkAddMembershipArray(d);
  PyVTKAddFile_vtkAdjacencyMatrixToEdgeTable(d);
  PyVTKAddFile_vtkArrayNorm(d);
  PyVTKAddFile_vtkArrayToTable(d);
  PyVTKAddFile_vtkCollapseGraph(d);
  PyVTKAddFile_vtkCollapseVerticesByArray(d);
  PyVTKAddFile_vtkContinuousScatterplot(d);
  PyVTKAddFile_vtkDotProductSimilarity(d);
  PyVTKAddFile_vtkEdgeCenters(d);
  PyVTKAddFile_vtkExpandSelectedGraph(d);
  PyVTKAddFile_vtkExtractSelectedGraph(d);
  PyVTKAddFile_vtkExtractSelectedTree(d);
  PyVTKAddFile_vtkGenerateIndexArray(d);
  PyVTKAddFile_vtkGraphHierarchicalBundleEdges(d);
  PyVTKAddFile_vtkGroupLeafVertices(d);
  PyVTKAddFile_vtkKCoreDecomposition(d);
  PyVTKAddFile_vtkMergeColumns(d);
  PyVTKAddFile_vtkMergeGraphs(d);
  PyVTKAddFile_vtkMergeTables(d);
  PyVTKAddFile_vtkMutableGraphHelper(d);
  PyVTKAddFile_vtkNetworkHierarchy(d);
  PyVTKAddFile_vtkPipelineGraphSource(d);
  PyVTKAddFile_vtkPruneTreeFilter(d);
  PyVTKAddFile_vtkRandomGraphSource(d);
  PyVTKAddFile_vtkReduceTable(d);
  PyVTKAddFile_vtkRemoveHiddenData(d);
  PyVTKAddFile_vtkRemoveIsolatedVertices(d);
  PyVTKAddFile_vtkSparseArrayToTable(d);
  PyVTKAddFile_vtkStreamGraph(d);
  PyVTKAddFile_vtkStringToCategory(d);
  PyVTKAddFile_vtkStringToNumeric(d);
  PyVTKAddFile_vtkTableToArray(d);
  PyVTKAddFile_vtkTableToGraph(d);
  PyVTKAddFile_vtkTableToSparseArray(d);
  PyVTKAddFile_vtkTableToTreeFilter(d);
  PyVTKAddFile_vtkThresholdGraph(d);
  PyVTKAddFile_vtkThresholdTable(d);
  PyVTKAddFile_vtkTransferAttributes(d);
  PyVTKAddFile_vtkTransposeMatrix(d);
  PyVTKAddFile_vtkTreeDifferenceFilter(d);
  PyVTKAddFile_vtkTreeFieldAggregator(d);
  PyVTKAddFile_vtkTreeLevelsFilter(d);
  PyVTKAddFile_vtkVertexDegree(d);
  PyVTKAddFile_vtkWordCloud(d);

  vtkPythonUtil::AddModule("vtkInfovisCore");

  return m;
}
