// Generated by vtkWrapPythonInit (see Wrapping/Tools/vtkWrapPythonInit.c)

#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>

// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

// Export the module initialization function
extern "C" { VTK_ABI_EXPORT PyObject *PyInit_vtkFiltersParallel(); }

// Each PyVTKAddFile_<name>() is implemented in <name>Python.cxx,
// where <name>Python.cxx is generated by running the vtkWrapPython
// executable on the <name>.h header file.
extern "C" { void PyVTKAddFile_vtkBlockDistribution(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAdaptiveTemporalInterpolator(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAggregateDataSetFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAlignImageDataSetFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkAngularPeriodicFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPAxisAlignedReflectionFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCleanArrays(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCollectGraph(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCollectPolyData(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCollectTable(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkCutMaterial(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkDistributedDataFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkDuplicatePolyData(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExtractCTHPart(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExtractPolyDataPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExtractUnstructuredGridPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkExtractUserDefinedPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGenerateProcessIds(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkHyperTreeGridGenerateGlobalIds(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkHyperTreeGridGenerateProcessIds(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkHyperTreeGridGhostCellsGenerator(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkIntegrateAttributes(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkIntegrationGaussianStrategy(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkIntegrationLinearStrategy(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkIntegrationStrategy(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMergeBlocks(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkMultiProcessControllerHelper(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPHyperTreeGridProbeFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPeriodicFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPConvertToMultiBlockDataSet(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPExtractDataArraysOverTime(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPExtractExodusGlobalTemporalVariables(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPExtractSelectedArraysOverTime(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPieceRequestFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPieceScalars(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPipelineSize(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPKdTree(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPLinearExtrusionFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPMaskPoints(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPMergeArrays(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPOutlineCornerFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPOutlineFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPOutlineFilterInternals(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPPolyDataNormals(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPProbeFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPProjectSphereFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPReflectionFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPResampleFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPartitionBalancer(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPSphereSource(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPTextureMapToSphere(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkPYoungsMaterialInterface(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRectilinearGridOutlineFilter(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRemoveGhosts(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransmitPolyDataPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransmitRectilinearGridPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransmitStructuredDataPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransmitStructuredGridPiece(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTransmitUnstructuredGridPiece(PyObject *dict); }

static PyMethodDef PyvtkFiltersParallel_Methods[] = {
  { nullptr, nullptr, 0, nullptr }
};

static PyModuleDef PyvtkFiltersParallel_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkFiltersParallel", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkFiltersParallel_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};

PyObject *PyInit_vtkFiltersParallel()
{
  PyObject *m = PyModule_Create(&PyvtkFiltersParallel_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkFiltersParallel");
  }

  const char *depends[13] = {
    "vtkmodules.vtkCommonCore",
    "vtkmodules.vtkCommonDataModel",
    "vtkmodules.vtkCommonExecutionModel",
    "vtkmodules.vtkFiltersCore",
    "vtkmodules.vtkFiltersExtraction",
    "vtkmodules.vtkFiltersGeneral",
    "vtkmodules.vtkFiltersGeometry",
    "vtkmodules.vtkFiltersHybrid",
    "vtkmodules.vtkFiltersHyperTree",
    "vtkmodules.vtkFiltersModeling",
    "vtkmodules.vtkFiltersSources",
    "vtkmodules.vtkFiltersTexture",
    "vtkmodules.vtkParallelCore",
  };

  for (int i = 0; i < 13; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
      Py_DECREF(m);
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkFiltersParallel: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
    Py_DECREF(m);
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkFiltersParallel, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkBlockDistribution(d);
  PyVTKAddFile_vtkAdaptiveTemporalInterpolator(d);
  PyVTKAddFile_vtkAggregateDataSetFilter(d);
  PyVTKAddFile_vtkAlignImageDataSetFilter(d);
  PyVTKAddFile_vtkAngularPeriodicFilter(d);
  PyVTKAddFile_vtkPAxisAlignedReflectionFilter(d);
  PyVTKAddFile_vtkCleanArrays(d);
  PyVTKAddFile_vtkCollectGraph(d);
  PyVTKAddFile_vtkCollectPolyData(d);
  PyVTKAddFile_vtkCollectTable(d);
  PyVTKAddFile_vtkCutMaterial(d);
  PyVTKAddFile_vtkDistributedDataFilter(d);
  PyVTKAddFile_vtkDuplicatePolyData(d);
  PyVTKAddFile_vtkExtractCTHPart(d);
  PyVTKAddFile_vtkExtractPolyDataPiece(d);
  PyVTKAddFile_vtkExtractUnstructuredGridPiece(d);
  PyVTKAddFile_vtkExtractUserDefinedPiece(d);
  PyVTKAddFile_vtkGenerateProcessIds(d);
  PyVTKAddFile_vtkHyperTreeGridGenerateGlobalIds(d);
  PyVTKAddFile_vtkHyperTreeGridGenerateProcessIds(d);
  PyVTKAddFile_vtkHyperTreeGridGhostCellsGenerator(d);
  PyVTKAddFile_vtkIntegrateAttributes(d);
  PyVTKAddFile_vtkIntegrationGaussianStrategy(d);
  PyVTKAddFile_vtkIntegrationLinearStrategy(d);
  PyVTKAddFile_vtkIntegrationStrategy(d);
  PyVTKAddFile_vtkMergeBlocks(d);
  PyVTKAddFile_vtkMultiProcessControllerHelper(d);
  PyVTKAddFile_vtkPHyperTreeGridProbeFilter(d);
  PyVTKAddFile_vtkPeriodicFilter(d);
  PyVTKAddFile_vtkPConvertToMultiBlockDataSet(d);
  PyVTKAddFile_vtkPExtractDataArraysOverTime(d);
  PyVTKAddFile_vtkPExtractExodusGlobalTemporalVariables(d);
  PyVTKAddFile_vtkPExtractSelectedArraysOverTime(d);
  PyVTKAddFile_vtkPieceRequestFilter(d);
  PyVTKAddFile_vtkPieceScalars(d);
  PyVTKAddFile_vtkPipelineSize(d);
  PyVTKAddFile_vtkPKdTree(d);
  PyVTKAddFile_vtkPLinearExtrusionFilter(d);
  PyVTKAddFile_vtkPMaskPoints(d);
  PyVTKAddFile_vtkPMergeArrays(d);
  PyVTKAddFile_vtkPOutlineCornerFilter(d);
  PyVTKAddFile_vtkPOutlineFilter(d);
  PyVTKAddFile_vtkPOutlineFilterInternals(d);
  PyVTKAddFile_vtkPPolyDataNormals(d);
  PyVTKAddFile_vtkPProbeFilter(d);
  PyVTKAddFile_vtkPProjectSphereFilter(d);
  PyVTKAddFile_vtkPReflectionFilter(d);
  PyVTKAddFile_vtkPResampleFilter(d);
  PyVTKAddFile_vtkPartitionBalancer(d);
  PyVTKAddFile_vtkPSphereSource(d);
  PyVTKAddFile_vtkPTextureMapToSphere(d);
  PyVTKAddFile_vtkPYoungsMaterialInterface(d);
  PyVTKAddFile_vtkRectilinearGridOutlineFilter(d);
  PyVTKAddFile_vtkRemoveGhosts(d);
  PyVTKAddFile_vtkTransmitPolyDataPiece(d);
  PyVTKAddFile_vtkTransmitRectilinearGridPiece(d);
  PyVTKAddFile_vtkTransmitStructuredDataPiece(d);
  PyVTKAddFile_vtkTransmitStructuredGridPiece(d);
  PyVTKAddFile_vtkTransmitUnstructuredGridPiece(d);

  vtkPythonUtil::AddModule("vtkFiltersParallel");

  return m;
}
