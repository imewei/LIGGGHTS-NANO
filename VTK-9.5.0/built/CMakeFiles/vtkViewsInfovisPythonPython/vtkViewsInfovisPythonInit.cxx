// Generated by vtkWrapPythonInit (see Wrapping/Tools/vtkWrapPythonInit.c)

#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>

// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

// Export the module initialization function
extern "C" { VTK_ABI_EXPORT PyObject *PyInit_vtkViewsInfovis(); }

// Each PyVTKAddFile_<name>() is implemented in <name>Python.cxx,
// where <name>Python.cxx is generated by running the vtkWrapPython
// executable on the <name>.h header file.
extern "C" { void PyVTKAddFile_vtkApplyColors(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkApplyIcons(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkDendrogramItem(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGraphItem(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkGraphLayoutView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkHeatmapItem(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkHierarchicalGraphPipeline(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkHierarchicalGraphView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkIcicleView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkInteractorStyleAreaSelectHover(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkInteractorStyleTreeMapHover(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkParallelCoordinatesHistogramRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkParallelCoordinatesRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkParallelCoordinatesView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderedGraphRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderedHierarchyRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderedRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderedSurfaceRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderedTreeAreaRepresentation(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkSCurveSpline(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTanglegramItem(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeAreaView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeHeatmapItem(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeMapView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkTreeRingView(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkViewUpdater(PyObject *dict); }

static PyMethodDef PyvtkViewsInfovis_Methods[] = {
  { nullptr, nullptr, 0, nullptr }
};

static PyModuleDef PyvtkViewsInfovis_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkViewsInfovis", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkViewsInfovis_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};

PyObject *PyInit_vtkViewsInfovis()
{
  PyObject *m = PyModule_Create(&PyvtkViewsInfovis_Module);
  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkViewsInfovis");
  }

  const char *depends[6] = {
    "vtkmodules.vtkCommonCore",
    "vtkmodules.vtkCommonDataModel",
    "vtkmodules.vtkCommonExecutionModel",
    "vtkmodules.vtkInteractionStyle",
    "vtkmodules.vtkRenderingContext2D",
    "vtkmodules.vtkViewsCore",
  };

  for (int i = 0; i < 6; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
      Py_DECREF(m);
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkViewsInfovis: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
    Py_DECREF(m);
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkViewsInfovis, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkApplyColors(d);
  PyVTKAddFile_vtkApplyIcons(d);
  PyVTKAddFile_vtkDendrogramItem(d);
  PyVTKAddFile_vtkGraphItem(d);
  PyVTKAddFile_vtkGraphLayoutView(d);
  PyVTKAddFile_vtkHeatmapItem(d);
  PyVTKAddFile_vtkHierarchicalGraphPipeline(d);
  PyVTKAddFile_vtkHierarchicalGraphView(d);
  PyVTKAddFile_vtkIcicleView(d);
  PyVTKAddFile_vtkInteractorStyleAreaSelectHover(d);
  PyVTKAddFile_vtkInteractorStyleTreeMapHover(d);
  PyVTKAddFile_vtkParallelCoordinatesHistogramRepresentation(d);
  PyVTKAddFile_vtkParallelCoordinatesRepresentation(d);
  PyVTKAddFile_vtkParallelCoordinatesView(d);
  PyVTKAddFile_vtkRenderedGraphRepresentation(d);
  PyVTKAddFile_vtkRenderedHierarchyRepresentation(d);
  PyVTKAddFile_vtkRenderedRepresentation(d);
  PyVTKAddFile_vtkRenderedSurfaceRepresentation(d);
  PyVTKAddFile_vtkRenderedTreeAreaRepresentation(d);
  PyVTKAddFile_vtkRenderView(d);
  PyVTKAddFile_vtkSCurveSpline(d);
  PyVTKAddFile_vtkTanglegramItem(d);
  PyVTKAddFile_vtkTreeAreaView(d);
  PyVTKAddFile_vtkTreeHeatmapItem(d);
  PyVTKAddFile_vtkTreeMapView(d);
  PyVTKAddFile_vtkTreeRingView(d);
  PyVTKAddFile_vtkViewUpdater(d);

  vtkPythonUtil::AddModule("vtkViewsInfovis");

  return m;
}
